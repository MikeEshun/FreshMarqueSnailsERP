// <auto-generated />
using FreshMarqueSnailsERP.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace FreshMarqueSnailsERP.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20180424135454_Models")]
    partial class Models
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.2-rtm-10011")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FreshMarqueSnailsERP.Models.DispatchRider", b =>
                {
                    b.Property<int>("DispatchRiderId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Company")
                        .IsRequired();

                    b.Property<int>("Contact");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<int>("OrderId");

                    b.Property<string>("Supervisor")
                        .IsRequired();

                    b.HasKey("DispatchRiderId");

                    b.ToTable("DispatchRiders");
                });

            modelBuilder.Entity("FreshMarqueSnailsERP.Models.Order", b =>
                {
                    b.Property<int>("OrderId");

                    b.Property<string>("Comment");

                    b.Property<int>("Contact");

                    b.Property<decimal>("Cost");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<DateTime>("DeliveryDate");

                    b.Property<string>("DeliveryStatus")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("JumboSize");

                    b.Property<int>("JumboSizeQuantity");

                    b.Property<int>("LargeSize");

                    b.Property<int>("LargeSizeQuantity");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("MediumSize");

                    b.Property<int>("MediumSizeQuantity");

                    b.Property<DateTime>("OrderDate");

                    b.Property<int>("PaymentMethod");

                    b.HasKey("OrderId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("FreshMarqueSnailsERP.Models.Retailer", b =>
                {
                    b.Property<int>("RetailerId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Contact");

                    b.Property<string>("Location")
                        .IsRequired();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<string>("Type")
                        .IsRequired();

                    b.HasKey("RetailerId");

                    b.ToTable("Retailers");
                });

            modelBuilder.Entity("FreshMarqueSnailsERP.Models.RetailSupply", b =>
                {
                    b.Property<int>("RetailSupplyId");

                    b.Property<string>("Comment");

                    b.Property<decimal>("Cost");

                    b.Property<int>("JumboSize");

                    b.Property<int>("JumboSizeQuantity");

                    b.Property<int>("LargeSize");

                    b.Property<int>("LargeSizeQuantity");

                    b.Property<int>("MediumSize");

                    b.Property<int>("MediumSizeQuantity");

                    b.Property<int>("RetailerId");

                    b.Property<DateTime>("SupplyDate");

                    b.HasKey("RetailSupplyId");

                    b.ToTable("RetailSupplies");
                });

            modelBuilder.Entity("FreshMarqueSnailsERP.Models.SnailPurchase", b =>
                {
                    b.Property<int>("SnailPurchaseId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Comment");

                    b.Property<decimal>("Cost");

                    b.Property<DateTime>("PurchaseDate");

                    b.Property<int>("SupplierId");

                    b.HasKey("SnailPurchaseId");

                    b.ToTable("SnailPurchases");
                });

            modelBuilder.Entity("FreshMarqueSnailsERP.Models.SnailSpecification", b =>
                {
                    b.Property<int>("SnailSpecificationId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description")
                        .IsRequired();

                    b.Property<decimal>("Height");

                    b.Property<string>("Size")
                        .IsRequired();

                    b.Property<int>("SnailTypeId");

                    b.Property<decimal>("Width");

                    b.HasKey("SnailSpecificationId");

                    b.ToTable("SnailSpecifications");
                });

            modelBuilder.Entity("FreshMarqueSnailsERP.Models.SnailType", b =>
                {
                    b.Property<int>("SnailTypeId");

                    b.Property<string>("Type")
                        .IsRequired();

                    b.HasKey("SnailTypeId");

                    b.ToTable("SnailTypes");
                });

            modelBuilder.Entity("FreshMarqueSnailsERP.Models.Supplier", b =>
                {
                    b.Property<int>("SupplierId");

                    b.Property<int>("Contact");

                    b.Property<DateTime>("LastSupply");

                    b.Property<string>("Location")
                        .IsRequired();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<string>("Reliability")
                        .IsRequired();

                    b.HasKey("SupplierId");

                    b.ToTable("Suppliers");
                });

            modelBuilder.Entity("FreshMarqueSnailsERP.Models.Order", b =>
                {
                    b.HasOne("FreshMarqueSnailsERP.Models.DispatchRider", "DispatchRider")
                        .WithMany("Orders")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("FreshMarqueSnailsERP.Models.RetailSupply", b =>
                {
                    b.HasOne("FreshMarqueSnailsERP.Models.Retailer", "Retailer")
                        .WithMany("RetailSupplies")
                        .HasForeignKey("RetailSupplyId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("FreshMarqueSnailsERP.Models.SnailType", b =>
                {
                    b.HasOne("FreshMarqueSnailsERP.Models.SnailSpecification", "SnailSpecification")
                        .WithOne("SnailType")
                        .HasForeignKey("FreshMarqueSnailsERP.Models.SnailType", "SnailTypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("FreshMarqueSnailsERP.Models.Supplier", b =>
                {
                    b.HasOne("FreshMarqueSnailsERP.Models.SnailPurchase", "SnailSale")
                        .WithOne("Supplier")
                        .HasForeignKey("FreshMarqueSnailsERP.Models.Supplier", "SupplierId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
